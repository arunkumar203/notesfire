{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid",
        ".validate": "newData.hasChildren(['email', 'displayName', 'createdAt', 'lastLogin'])",
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)"
        },
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "photoURL": {
          ".validate": "newData.val() === null || newData.isString()"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && (!data.exists() || !newData.hasChildren() || newData.val() === data.val())"
        },
        "lastLogin": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    "notes": {
      "$noteId": {
        ".read": "auth != null && (data.child('userId').val() === auth.uid || newData.child('userId').val() === auth.uid)",
        ".write": "auth != null && (data.child('userId').val() === auth.uid || newData.child('userId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['title', 'content', 'userId', 'createdAt', 'updatedAt'])",
        "title": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "content": {
          ".validate": "newData.isString()"
        },
        "userId": {
          ".validate": "newData.isString() && newData.val() === auth.uid"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && (!data.exists() || !newData.hasChildren() || newData.val() === data.val())"
        },
        "updatedAt": {
          ".validate": "newData.isNumber() && (!data.exists() || data.child('createdAt').val() <= newData.val())"
        }
      },
      ".indexOn": ["userId", "updatedAt"]
    }
  }
}
